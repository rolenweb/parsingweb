<?php
use yii\helpers\Html;
use yii\bootstrap\ActiveForm;
use yii\captcha\Captcha;

?>
<section class="title">
        <div class="container">
            <div class="row-fluid">
                <div class="span12">
                    <h1>Парсинг товаров сайта</h1>
                </div>
                
            </div>
        </div>
</section>

<section id="order" class="container">
        <div class="row-fluid">
			<div class="span2"></div>
            <div class="span8">
                <h3>Заказать парсинг товаров сайта</h3>
                <?php if (Yii::$app->session->hasFlash('contactFormSubmitted')): ?>
                <div class="alert alert-success">
		            Ваш заказ принят. Мы свяжимся с вами в ближайшее время
		        </div>
		        <?php else: ?>
                <p>Опишите как можно детельнее, что вам нужно парсить и в каком виде предоставлять результат. От этого зависит точность расчета стоимости и времени.</p>
                <?php endif; ?>
                <div class="status alert alert-success" style="display: none"></div>
				
				<?php $form = ActiveForm::begin([
						'id' => 'order',
						'options' => [
							'class' => 'contact-form',
							'name' => 'order',
						]
					]);
				?>
                
                  <div class="row-fluid">
                    <div class="span5">
                    	<?= $form->field($order, 'name')->textInput(['autofocus' => true,'class' => 'input-block-level','required' => 'required','placeholder' => 'Ваше имя'])->label('Имя') ?>
                        
                        <?= $form->field($order, 'site')->textInput(['class' => 'input-block-level','required' => 'required','placeholder' => 'Сайт(ы) которые нужно парсить'])->label('Сайт(ы)') ?>
                        
                        <?= $form->field($order, 'email')->textInput(['class' => 'input-block-level','required' => 'required','placeholder' => 'Email'])->label('Email') ?>

						<?= $form->field($order, 'verifyCode')->widget(Captcha::className(), [
                        'template' => '<div class="span5">{image}</div><div class="span6">{input}</div>',
                        'options' => [
                        	'required' => 'required'
                        ]
                    ])->label('Подтвердите что вы не робот') ?>
                    </div>
                    <div class="span7">
                    	<?= $form->field($order, 'body')->textarea(['rows' => 16,'class' => 'input-block-level'])->label('Детали') ?>
                        
                    </div>

                </div>
                
                <?= Html::submitButton('Заказать', ['class' => 'btn btn-primary btn-large pull-right', 'name' => 'order-button']) ?>
                

            <?php ActiveForm::end(); ?>
        </div>
    </div>

</section>
<section class="container">
        <h2>Кому нужен парсинг</h2>
        <p>Администраторам интернет ресурсов, веб-мастерам, владельцам онлайн-магазинов сложно вручную проводить работу по сбору, обработке и размещению большого количества информации на своих сайтах. Процесс этот рутинный, трудоемкий, отнимающий много времени. Автоматизировать его помогают парсеры, способные за небольшое количество времени перебрать огромное количество информации. Разработаны программы, позволяющие осуществить <?= Html::a('парсинг картинок с сайта',['site/kartinok-s-sajta'],['title' => 'парсинг картинок с сайта']) ?>, текстовых данных и прочей информации.</p>
        <p>
            При помощи парсера, выбрав понравившийся интернет-магазин, есть возможность собрать с него необходимые товары и, переведя в требуемый формат, выложить данные на другом сайте. <strong>Парсинг цен сайтов</strong>, описаний и фотографий товаров, осуществленный при помощи специальной программы, позволит за короткое время решить такие задачи:
            
        </p>
        <ul>
            <li>обработать даже самые большие объемы информации</li>
            <li>распределить собранные данные по типам и выбрать только нужные</li>
            <li>предоставить результаты парсинга в требуемом виде (алгоритм и правила закладываются разработчиками)</li>
        </ul>
        <p>Полученный результат (база данных, электронная таблица и т.д.) требует некоторой обработки, на которую не уходит слишком много времени. </p>
        <h2>Как происходит парсинг товаров</h2>
        <p>Для наполнения интернет-магазинов чаще всего используются парсеры товаров, разработанные специально для этих целей. Данные программы позволяют быстро и без существенных материальных затрат получить информацию из необходимых источников. Выгружать данные после парсинга можно в <strong>Еxcel</strong>, <strong>xml</strong>, <strong>txt</strong>, <strong>csv</strong> и прочие форматы – информация на выходе представляется в любом виде, удобном для восприятия и дальнейшей обработки. </p>
        <p>
            Пишется парсер на одном из часто использующихся языков программирования (Python, PHP, Ruby, Perl). Вне зависимости от того, на каком из перечисленных языков написано приложение, алгоритм его работы остается неизменным:
            
        </p>
        <ul>
            <li>выход в сеть Интернет, получение доступа к ресурсу и его скачивание</li>
            <li>чтение, извлечение, анализ информации</li>
            <li>представление полученных данных в требуемом виде</li>
        </ul>
        <p>
            Чтобы обработать целый сайт, нужно при написании парсера заложить в его алгоритм переход на следующую страницу для получения всего интересующего материала.
        </p>
        <p>
            Заполнить интернет-магазин товарами при помощи парсера можно за короткое время (обычно за 3-4 дня). Данную работу условно можно разделить на 2 подзадачи. К первой относится непосредственно парсинг – поиск интересующей на конкретной странице информации, вторая – анализ полученных данных. Для оптимальной работы по наполнению онлайн-магазина товарами нужно использовать следующие приложения:
            
        </p>
        <ul>
            <li>парсер неизменной информации о товарах с сайтов. Используется нечасто и лишь для проверки поступления новых товаров – он перебирает страницы и извлекает из них данные (название, свойства, фото);</li>
            <li>парсер условно-переменных данных – включается часто, в автоматическом режиме. Разбирает страницы сайта с целью поиска стоимости и актуализации этой информации</li>
            <li>
                    после парсера постоянной информации запускается админка для структурирования данных, позволяющая разбирать и систематизировать все, что было получено при помощи этого приложения.
            </li>
        </ul>
        <p>Используя специальные парсеры товаров, можно не сомневаться в актуальности информации, размещенной на страницах интернет-магазина.</p>
        

</section>